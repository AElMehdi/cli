# Gopkg.toml example
#
# Refer to https://github.com/golang/dep/blob/master/docs/Gopkg.toml.md
# for detailed Gopkg.toml documentation.
#
# required = ["github.com/user/thing/cmd/thing"]
# ignored = ["github.com/user/project/pkgX", "bitbucket.org/user/project/pkgA/pkgY"]
#
# [[constraint]]
#   name = "github.com/user/project"
#   version = "1.0.0"
#
# [[constraint]]
#   name = "github.com/user/project2"
#   branch = "dev"
#   source = "github.com/myfork/project2"
#
# [[override]]
#  name = "github.com/x/y"
#  version = "2.4.0"


[prune]
  go-tests = true
#  unused-packages = true
  non-go = true

[[constraint]]
  name = "github.com/spf13/cobra"
  version = "v0.0.3"

[[constraint]]
  name = "github.com/spf13/pflag"
  version = "v1.0.1"

[[constraint]]
  name = "k8s.io/api"
  version = "kubernetes-1.10.0"

[[constraint]]
  name = "k8s.io/apimachinery"
  version = "kubernetes-1.10.0"

[[constraint]]
  name = "k8s.io/client-go"
  version = "kubernetes-1.10.0"

[[override]]
  name = "github.com/golang/protobuf"
  version = "v1.1.0"

[[constraint]]
  name = "github.com/knative/eventing"
  revision = "f3ce0d1847b51a47918870ec1dea7871e813a8c6" # Awaiting proper tag / blessed sha

[[constraint]]
  name = "github.com/knative/serving"
  version = "v0.1.0"

[[constraint]]
  name = "github.com/knative/build"
  # This is v0.1.0, but dep doesn't know how to detect that. Can't use v0.1.0 because serving has a dependency against
  # the sha, not the logical v0.1.0 tag...
  revision = "5c1d8c8469d1ed34b2aecf4c2305b3a57fff2ee3"

[[constraint]]
  name = "github.com/ghodss/yaml"
  version = "v1.0.0"
